return (p)
}
meta <- readr::read_csv(here("data","sample_meta.csv")) %>%
mutate(across(.cols=-samplename, as.factor))
here::here()
knitr::opts_chunk$set(echo = TRUE)
#negative binomial GLM and related
library('DESeq2')
library('readr')
#Exploratory analysis
library('tidyverse')
library('pcaExplorer')
library('ggrepel')
#pathway and gene clusters
#library('DEGreport')
#Heatmap
library('pheatmap')
library('RColorBrewer')
library('viridis')
#Plotting
library(patchwork)
library('here')
here::i_am("~/Projects/bo_ram_kim/project_rnaseq_april2022/analysis/rnaseq_salmon_quant_DESeq2_May2022.Rmd")
#negative binomial GLM and related
library('DESeq2')
library('readr')
#Exploratory analysis
library('tidyverse')
library('pcaExplorer')
library('ggrepel')
#pathway and gene clusters
#library('DEGreport')
#Heatmap
library('pheatmap')
library('RColorBrewer')
library('viridis')
#Plotting
library(patchwork)
library('here')
here::i_am("project_rnaseq_april2022/analysis/rnaseq_salmon_quant_DESeq2_May2022.Rmd")
here::here()
here::i_am("analysis/rnaseq_salmon_quant_DESeq2_May2022.Rmd")
here::here()
knitr::opts_chunk$set(echo = TRUE)
#negative binomial GLM and related
library('DESeq2')
library('readr')
#Exploratory analysis
library('tidyverse')
library('pcaExplorer')
library('ggrepel')
#pathway and gene clusters
#library('DEGreport')
#Heatmap
library('pheatmap')
library('RColorBrewer')
library('viridis')
#Plotting
library(patchwork)
library('here')
here::i_am("analysis/rnaseq_salmon_quant_DESeq2_May2022.Rmd")
## Volcano Plot
do_vol_plot <- function(df, sig=0.05, fc=0.5, size = 4){
df_sig<- df %>% filter(padj < sig)
## genes with labels -- signficant,decreased expression and start with IGF
df_label<- df %>%
filter(padj < sig, abs(log2FoldChange) > fc)
#mutate(short_id = stringr::str_split(gene_id, "000000") %>% map_chr(.,2))
## plot
p <- ggplot(df, aes(log2FoldChange, -log10(padj)))  +
geom_point(size=0.8, color="black", alpha=.8) +
geom_point(size=0.8, data=df_sig, aes(log2FoldChange, -log10(padj)), colour="red") +
geom_text_repel(size= size,
max.overlaps = 25,
colour="black",
segment.size=0.1,
nudge_x=0.06,
nudge_y=0.06,
data=df_label,
aes(log2FoldChange, -log10(padj), label=gene_name),
max.iter= 200,
point.padding = 0.15,
segment.alpha = 1,
box.padding=.15,
min.segment.length = unit(0.15, 'lines'),size=2.5) +
theme(
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=14, margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size=14, margin = margin(t = 0, r = 10, b = 0, l = 10)),
plot.margin =unit(c(.5,.5,.5,.5),"cm"),
plot.title = element_text(size = 11)
)
return (p)
}
meta <- readr::read_csv(here("data","sample_meta.csv")) %>%
mutate(across(.cols=-samplename, as.factor))
dat <- readr::read_delim(here("data", "salmon.merged.gene_counts_length_scaled.tsv"), delim = '\t', col_names = TRUE) %>%
mutate(across(.cols=-c(gene_id,gene_name), as.integer))
meta <- meta %>% mutate(group=paste0(condition,"_",day)) %>% as.data.frame()
rownames(meta) <- meta$samplename
anno <- dat[1:2]
dat <- dat[c(13,24,26,27,28,29,30,31,32,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25)]
assertthat::are_equal(colnames(dat), meta$samplename)
dat <- as.matrix(dat)
rownames(dat) <- anno$gene_name
dds <- DESeqDataSetFromMatrix(countData = dat,
colData = meta,
design = ~ batch + donor + group)
dds <- dds[ rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
vst.dds <- vst(dds)
pcaExplorer::pcaplot(vst.dds, intgroup="condition", ellipse = FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Control vs. Knockdown")
pcaExplorer::pcaplot(vst.dds, intgroup="day", ellipse = FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Day")
pcaExplorer::pcaplot(vst.dds, intgroup="batch", ellipse=FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Batch")
pcaExplorer::pcaplot(vst.dds, intgroup="donor", ellipse=FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Donor")
pcaExplorer::pcaplot(vst.dds, intgroup="group", ellipse=FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Grouped Day and KO")
pcaExplorer::pcaplot(vst.dds, intgroup = "donor", ellipse=FALSE, ntop=400, text_labels=FALSE, pcX = 2, pcY = 3, title = "PCA Plot PC2 and PC3: Batch effect with Donor")
pcaExplorer::pcaplot(vst.dds, intgroup = "group", ellipse=FALSE, ntop=400, text_labels=FALSE, pcX = 2, pcY = 3, title = "PCA Plot PC2 and PC3: Grouped Day and KO")
pcaobj_dds <- prcomp(t(assay(vst.dds)))
pcascree(pcaobj_dds, type='pev')
res_dds <- correlatePCs(pcaobj_dds, colData(dds))
plotPCcorrs(res_dds, pc = 1)
plotPCcorrs(res_dds, pc = 2)
plotPCcorrs(res_dds, pc = 3)
sampleDists <- dist(t(assay(vst.dds)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- vst.dds$samplename
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
anno_col <- as.data.frame(colData(vst.dds)[,4:6], row.names = vst.dds$sample)
pheatmap(sampleDistMatrix,
#annotation_col = anno_col,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
colors = colors,
annotation_row = anno_col)
plotCounts(dds, gene = "SLC25A1", intgroup = "group")
plotCounts(dds, gene = "DYNLRB1", intgroup = "group")
plotCounts(dds, gene = "DBNDD2", intgroup = "group")
plotCounts(dds, gene = "TMED4", intgroup = "group")
res_cont_d2_d0 <- as.data.frame(results(dds,contrast = c('group','cont_d2','cont_d0')))
## Table of top DE genes
res_cont_d2_d0_sig <- res_cont_d2_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_cont_d2_d0_sig
df <- res_cont_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-4, fc = 0.7, size = 2)
p
do_vol_plot <- function(df, sig=0.05, fc=0.5, size = 4){
df_sig<- df %>% filter(padj < sig)
## genes with labels -- signficant,decreased expression and start with IGF
df_label<- df %>%
filter(padj < sig, abs(log2FoldChange) > fc)
#mutate(short_id = stringr::str_split(gene_id, "000000") %>% map_chr(.,2))
## plot
p <- ggplot(df, aes(log2FoldChange, -log10(padj)))  +
geom_point(size=0.8, color="black", alpha=.8) +
geom_point(size=0.8, data=df_sig, aes(log2FoldChange, -log10(padj)), colour="red") +
geom_text_repel(size= size,
max.overlaps = 25,
colour="black",
segment.size=0.1,
nudge_x=0.06,
nudge_y=0.06,
data=df_label,
aes(log2FoldChange, -log10(padj), label=gene_name),
max.iter= 200,
max.overlaps=25,
point.padding = 0.15,
segment.alpha = 1,
box.padding=.15,
min.segment.length = unit(0.15, 'lines'),size=2.5) +
theme(
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=14, margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size=14, margin = margin(t = 0, r = 10, b = 0, l = 10)),
plot.margin =unit(c(.5,.5,.5,.5),"cm"),
plot.title = element_text(size = 11)
)
return (p)
}
df <- res_cont_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-4, fc = 0.7, size = 2)
## Volcano Plot
do_vol_plot <- function(df, sig=0.05, fc=0.5, size = 4){
df_sig<- df %>% filter(padj < sig)
## genes with labels -- signficant,decreased expression and start with IGF
df_label<- df %>%
filter(padj < sig, abs(log2FoldChange) > fc)
#mutate(short_id = stringr::str_split(gene_id, "000000") %>% map_chr(.,2))
## plot
p <- ggplot(df, aes(log2FoldChange, -log10(padj)))  +
geom_point(size=0.8, color="black", alpha=.8) +
geom_point(size=0.8, data=df_sig, aes(log2FoldChange, -log10(padj)), colour="red") +
geom_text_repel(size= size,
max.overlaps = 45,
colour="black",
segment.size=0.1,
nudge_x=0.06,
nudge_y=0.06,
data=df_label,
aes(log2FoldChange, -log10(padj), label=gene_name),
max.iter= 200,
point.padding = 0.15,
segment.alpha = 1,
box.padding=.15,
min.segment.length = unit(0.15, 'lines'),size=2.5) +
theme(
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=14, margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size=14, margin = margin(t = 0, r = 10, b = 0, l = 10)),
plot.margin =unit(c(.5,.5,.5,.5),"cm"),
plot.title = element_text(size = 11)
)
return (p)
}
df <- res_cont_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-7, fc = 0.7, size = 2)
p
df <- res_cont_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-7, fc = 1.5, size = 2)
p
res_cont_d1_d0 <- as.data.frame(results(dds,contrast = c('group','cont_d1','cont_d0')))
## Table of top DE genes
res_cont_d1_d0_sig <- res_cont_d1_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_cont_d1_d0_sig
df <- res_cont_d1_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-8, fc = 1.5, size = 2)
p
res_ko_d2_d0 <- as.data.frame(results(dds,contrast = c('group','ko_d2','ko_d0')))
## Table of top DE genes
res_ko_d2_d0_sig <- res_ko_d2_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_ko_d2_d0_sig
df <- res_ko_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-3, fc = 0.7, size = 2)
p
res_ko_d1_d0 <- as.data.frame(results(dds,contrast = c('group','ko_d1','ko_d0')))
## Table of top DE genes
res_ko_d1_d0_sig <- res_ko_d1_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_ko_d1_d0_sig
df <- res_ko_d1_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-10, fc = 1.5, size = 2)
p
df <- res_ko_d1_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-5, fc = 1.5, size = 2)
p
### Genes of interest box plots
plotCounts(dds, gene = "GMNC", intgroup = "group")
plotCounts(dds, gene = "MCIDAS", intgroup = "group")
plotCounts(dds, gene = "FOXJ1", intgroup = "group")
plotCounts(dds, gene = "TRRAP", intgroup = "group")
plotCounts(dds, gene = "MYB", intgroup = "group")
plotCounts(dds, gene = "RFX3", intgroup = "group")
plotCounts(dds, gene = "GRHL2", intgroup = "group")
plotCounts(dds, gene = "CCDC181", intgroup = "group")
plotCounts(dds, gene = "CCDC17", intgroup = "group")
plotCounts(dds, gene = "SCGB1A1", intgroup = "group")
write.csv(res_KO_Day0_sig, here("data","DEGs_KO_WT_Day0_sig_p1Em5.csv"))
write.csv(res_cont_d2_d1, here("data","DEGs_WT_Day2_v_Day1.csv"))
write.csv(res_cont_d2_d0, here("data", "DEGs_WT_Day2_v_Day0.csv"))
write.csv(res_cont_d1_d0, here("data", "DEGs_WT_Day1_v_Day0.csv"))
write.csv(res_ko_d2_d0, here("data","DEGs_KO_Day2_v_Day0.csv"))
write.csv(res_ko_d1_d0, here("data","DEGs_KO_Day1_v_Day0.csv"))
write.csv(res_ko_d2_d1, here("data","DEGs_KO_Day2_v_Day1.csv"))
knitr::opts_chunk$set(echo = TRUE)
#negative binomial GLM and related
library('DESeq2')
library('readr')
#Exploratory analysis
library('tidyverse')
library('pcaExplorer')
library('ggrepel')
#pathway and gene clusters
#library('DEGreport')
#Heatmap
library('pheatmap')
library('RColorBrewer')
library('viridis')
#Plotting
library(patchwork)
library('here')
here::i_am("analysis/rnaseq_salmon_quant_DESeq2_May2022.Rmd")
## Volcano Plot
do_vol_plot <- function(df, sig=0.05, fc=0.5, size = 4){
df_sig<- df %>% filter(padj < sig)
## genes with labels -- signficant,decreased expression and start with IGF
df_label<- df %>%
filter(padj < sig, abs(log2FoldChange) > fc)
#mutate(short_id = stringr::str_split(gene_id, "000000") %>% map_chr(.,2))
## plot
p <- ggplot(df, aes(log2FoldChange, -log10(padj)))  +
geom_point(size=0.8, color="black", alpha=.8) +
geom_point(size=0.8, data=df_sig, aes(log2FoldChange, -log10(padj)), colour="red") +
geom_text_repel(size= size,
max.overlaps = 45,
colour="black",
segment.size=0.1,
nudge_x=0.06,
nudge_y=0.06,
data=df_label,
aes(log2FoldChange, -log10(padj), label=gene_name),
max.iter= 200,
point.padding = 0.15,
segment.alpha = 1,
box.padding=.15,
min.segment.length = unit(0.15, 'lines'),size=2.5) +
theme(
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=14, margin = margin(t = 10, r = 0, b = 10, l = 0)),
axis.title.y = element_text(size=14, margin = margin(t = 0, r = 10, b = 0, l = 10)),
plot.margin =unit(c(.5,.5,.5,.5),"cm"),
plot.title = element_text(size = 11)
)
return (p)
}
meta <- readr::read_csv(here("data","sample_meta.csv")) %>%
mutate(across(.cols=-samplename, as.factor))
dat <- readr::read_delim(here("data", "salmon.merged.gene_counts_length_scaled.tsv"), delim = '\t', col_names = TRUE) %>%
mutate(across(.cols=-c(gene_id,gene_name), as.integer))
meta <- meta %>% mutate(group=paste0(condition,"_",day)) %>% as.data.frame()
rownames(meta) <- meta$samplename
anno <- dat[1:2]
dat <- dat[c(13,24,26,27,28,29,30,31,32,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25)]
assertthat::are_equal(colnames(dat), meta$samplename)
dat <- as.matrix(dat)
rownames(dat) <- anno$gene_name
dds <- DESeqDataSetFromMatrix(countData = dat,
colData = meta,
design = ~ batch + donor + group)
dds <- dds[ rowSums(counts(dds)) > 10, ]
dds <- DESeq(dds)
vst.dds <- vst(dds)
pcaExplorer::pcaplot(vst.dds, intgroup="condition", ellipse = FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Control vs. Knockdown")
pcaExplorer::pcaplot(vst.dds, intgroup="day", ellipse = FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Day")
pcaExplorer::pcaplot(vst.dds, intgroup="batch", ellipse=FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Batch")
pcaExplorer::pcaplot(vst.dds, intgroup="donor", ellipse=FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Donor")
pcaExplorer::pcaplot(vst.dds, intgroup="group", ellipse=FALSE, ntop=400, text_labels = FALSE, title="PCA Plot: Grouped Day and KO")
pcaExplorer::pcaplot(vst.dds, intgroup = "donor", ellipse=FALSE, ntop=400, text_labels=FALSE, pcX = 2, pcY = 3, title = "PCA Plot PC2 and PC3: Batch effect with Donor")
pcaExplorer::pcaplot(vst.dds, intgroup = "group", ellipse=FALSE, ntop=400, text_labels=FALSE, pcX = 2, pcY = 3, title = "PCA Plot PC2 and PC3: Grouped Day and KO")
pcaobj_dds <- prcomp(t(assay(vst.dds)))
pcascree(pcaobj_dds, type='pev')
res_dds <- correlatePCs(pcaobj_dds, colData(dds))
plotPCcorrs(res_dds, pc = 1)
plotPCcorrs(res_dds, pc = 2)
plotPCcorrs(res_dds, pc = 3)
sampleDists <- dist(t(assay(vst.dds)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- vst.dds$samplename
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
anno_col <- as.data.frame(colData(vst.dds)[,4:6], row.names = vst.dds$sample)
pheatmap(sampleDistMatrix,
#annotation_col = anno_col,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
colors = colors,
annotation_row = anno_col)
res_KO_Day0 <- as.data.frame(results(dds,contrast = c('group','ko_d0','cont_d0')))
## Table of top DE genes
res_KO_Day0_sig <- res_KO_Day0 %>%
arrange(padj) %>%
filter(padj < 0.00001) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_KO_Day0_sig
df <- res_KO_Day0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.0001) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-15, fc = 1, size = 2)
p
plotCounts(dds, gene = "SLC25A1", intgroup = "group")
plotCounts(dds, gene = "DYNLRB1", intgroup = "group")
plotCounts(dds, gene = "DBNDD2", intgroup = "group")
plotCounts(dds, gene = "TMED4", intgroup = "group")
res_KO_Day1 <- as.data.frame(results(dds,contrast = c('group','ko_d1','cont_d1')))
## Table of top DE genes
res_KO_Day1_sig <- res_KO_Day1 %>%
arrange(padj) %>%
filter(padj < 0.00001) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_KO_Day1_sig
df <- res_KO_Day1 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.0001) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-15, fc = 1, size = 2)
p
res_KO_Day2 <- as.data.frame(results(dds,contrast = c('group','ko_d2','cont_d2')))
## Table of top DE genes
res_KO_Day2_sig <- res_KO_Day2 %>%
arrange(padj) %>%
filter(padj < 0.00001) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_KO_Day2_sig
df <- res_KO_Day2 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.0001) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-15, fc = 1, size = 2)
p
res_cont_d2_d1 <- as.data.frame(results(dds,contrast = c('group','cont_d2','cont_d1')))
## Table of top DE genes
res_cont_d2_d1_sig <- res_cont_d2_d1 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_cont_d2_d1_sig
df <- res_cont_d2_d1 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-4, fc = 0.7, size = 2)
p
res_ko_d2_d1 <- as.data.frame(results(dds,contrast = c('group','ko_d2','ko_d1')))
## Table of top DE genes
res_ko_d2_d1_sig <- res_ko_d2_d1 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_ko_d2_d1_sig
df <- res_ko_d2_d1 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-3, fc = 0.7, size = 2)
p
res_cont_d2_d0 <- as.data.frame(results(dds,contrast = c('group','cont_d2','cont_d0')))
## Table of top DE genes
res_cont_d2_d0_sig <- res_cont_d2_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_cont_d2_d0_sig
df <- res_cont_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-10, fc = 1.5, size = 2)
p
res_cont_d1_d0 <- as.data.frame(results(dds,contrast = c('group','cont_d1','cont_d0')))
## Table of top DE genes
res_cont_d1_d0_sig <- res_cont_d1_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_cont_d1_d0_sig
df <- res_cont_d1_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-10, fc = 1.5, size = 2)
p
res_ko_d2_d0 <- as.data.frame(results(dds,contrast = c('group','ko_d2','ko_d0')))
## Table of top DE genes
res_ko_d2_d0_sig <- res_ko_d2_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_ko_d2_d0_sig
df <- res_ko_d2_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-10, fc = 1.5, size = 2)
p
res_ko_d1_d0 <- as.data.frame(results(dds,contrast = c('group','ko_d1','ko_d0')))
## Table of top DE genes
res_ko_d1_d0_sig <- res_ko_d1_d0 %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_ko_d1_d0_sig
df <- res_ko_d1_d0 %>% mutate(gene_name = rownames(.)) %>% filter(padj < 0.01) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-5, fc = 1.5, size = 2)
p
dds2 <- DESeqDataSetFromMatrix(countData = dat,
colData = meta,
design = ~ batch + donor + day*condition)
dds2 <- dds2[ rowSums(counts(dds)) > 10, ]
dds2 <- DESeq(dds2, test = "LRT", reduced = ~ batch + donor + day + condition)
res_interact <- results(dds2)
res_interact_sig <- res_interact %>%
as.data.frame() %>%
arrange(padj) %>%
filter(padj < 0.01) %>%
dplyr::select(c(padj, baseMean, log2FoldChange)) %>%
mutate(across(c(1:3), ~round(.x, digits=3)))
res_interact_sig
plotCounts(dds, gene = "LOXL2", intgroup = "group")
plotCounts(dds, gene = "COL17A1", intgroup = "group")
plotCounts(dds, gene = "PSEN2", intgroup = "group")
plotCounts(dds, gene = "S100A10", intgroup = "group")
df <- res_interact %>%
as.data.frame() %>%
mutate(gene_name = rownames(.)) %>% filter(padj < 0.05) %>% filter(abs(log2FoldChange) < 10)
p <- do_vol_plot(df = df, sig = 1e-3, fc = 1.2, size = 2)
p
plotCounts(dds, gene = "GMNC", intgroup = "group")
plotCounts(dds, gene = "GMNC", intgroup = "group")
plotCounts(dds, gene = "MCIDAS", intgroup = "group")
plotCounts(dds, gene = "MYB", intgroup = "group")
plotCounts(dds, gene = "RFX2", intgroup = "group")
plotCounts(dds, gene = "RFX3", intgroup = "group")
plotCounts(dds, gene = "FOXJ1", intgroup = "group")
plotCounts(dds, gene = "NOTCH2", intgroup = "group")
plotCounts(dds, gene = "JAG1", intgroup = "group")
plotCounts(dds, gene = "MUC12", intgroup = "group")
plotCounts(dds, gene = "MUC15", intgroup = "group")
